openapi: 3.0.0
info:
   version: 1.0.0
   title: Membership portal
   license:
      name: Eclipse Public License - 2.0
      url: https://www.eclipse.org/legal/epl-2.0/
servers:
-  url: TBD - Internal
   description: Production endpoint for the membership portal data
tags:
-  name: Membership form
   description: Definitions related to membership form data in the database
-  name: Contacts
   description: Definitions related to membership form designated contacts
-  name: Organizations
   description: Definitions related to membership form organizations
-  name: Working Groups
   description: Definitions related to membership form working group targets
paths:
   /form:
      get:
         tags:
         - Membership form
         summary: Membership form list
         description: Returns a list of tracked membership forms
         responses:
            200:
               description: Success
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/MembershipForms'
            500:
               description: Error while retrieving data
      post:
         tags:
         - Membership form
         summary: Membership form create
         description: Using the passed form object, updates or inserts are made to save the data.
         requestBody:
            description: The form to be updated or inserted into the data set.
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/MembershipForm'
         responses:
            200:
               description: Success
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/MembershipForm'
            403:
               description: Unauthorized
   /form/{id}:
      parameters:
      -  name: id
         in: path
         description: Unique ID of the membership form entry
         required: true
         schema:
            $ref: '#/components/schemas/ObjectID'
      get:
         tags:
         - Membership form
         summary: Membership form
         description: Returns a membership form entry that has a matching ID
         responses:
            200:
               description: Success
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/MembershipForm'
            403:
               description: Unauthorized
            500:
               description: Error while retrieving data
      put:
         tags:
         - Membership form
         summary: Membership form update
         description: Using the passed form object, updates or inserts are made to save the data.
         requestBody:
            description: The form to be updated or inserted into the data set.
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/MembershipForm'
         responses:
            200:
               description: Success
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/MembershipForm'
            403:
               description: Unauthorized
      delete:
         tags:
         - Membership form
         summary: Membership form delete
         description: Remove a membership form entry with the given ID
         responses:
            204:
               description: Success
            403:
               description: Unauthorized
   /form/{id}/contacts:
      parameters:
      -  name: id
         in: path
         description: Unique ID of the membership form entry
         required: true
         schema:
            $ref: '#/components/schemas/ObjectID'
      get:
         tags:
         - Contacts
         summary: Contacts list
         description: Returns a list of tracked contacts
         responses:
            200:
               description: Success
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/Contacts'
            500:
               description: Error while retrieving data
      post:
         tags:
         - Contacts
         summary: Contacts create
         description: Using the passed contact object, updates or inserts are made to save the data.
         requestBody:
            description: The contact to be updated or inserted into the data set.
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/Contact'
         responses:
            200:
               description: Success
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/Contact'
            403:
               description: Unauthorized
   /form/{id}/contacts/{contactID}:
      parameters:
      -  name: id
         in: path
         description: Unique ID of the membership form entry
         required: true
         schema:
            $ref: '#/components/schemas/ObjectID'
      -  name: contactID
         in: path
         description: Unique ID of the contact for the current form
         required: true
         schema:
            $ref: '#/components/schemas/ObjectID'
      get:
         tags:
         - Contacts
         summary: Contacts
         description: Returns a contact for the form given a form ID and contact ID
         responses:
            200:
               description: Success
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/Contact'
            403:
               description: Unauthorized
            500:
               description: Error while retrieving data
      put:
         tags:
         - Contacts
         summary: Contacts update
         description: Using the passed contact object, updates or inserts are made to save the data.
         requestBody:
            description: The contact to be updated or inserted into the data set.
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/Contact'
         responses:
            200:
               description: Success
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/Contact'
            403:
               description: Unauthorized
      delete:
         tags:
         - Contacts
         summary: Contacts delete
         description: Remove a contact entry with the given ID
         responses:
            204:
               description: Success
            403:
               description: Unauthorized
   /form/{id}/organizations:
      parameters:
      -  name: id
         in: path
         description: Unique ID of the membership form entry
         required: true
         schema:
            $ref: '#/components/schemas/ObjectID'
      get:
         tags:
         - Organizations
         summary: Organizations list
         description: Returns a list of tracked organizationsfor the form
         responses:
            200:
               description: Success
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/Organizations'
            500:
               description: Error while retrieving data
      post:
         tags:
         - Organizations
         summary: Organizations create
         description: Using the passed organization object, a new organization object is saved to the dataset.
         requestBody:
            description: The organization to be updated or inserted into the data set.
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/Organization'
         responses:
            200:
               description: Success
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/Organization'
               
            403:
               description: Unauthorized
   /form/{id}/organizations/{orgID}:
      parameters:
      -  name: id
         in: path
         description: Unique ID of the membership form entry
         required: true
         schema:
            $ref: '#/components/schemas/ObjectID'
      -  name: orgID
         in: path
         description: Unique ID of the organization for the form entry
         required: true
         schema:
            $ref: '#/components/schemas/ObjectID'
      put:
         tags:
         - Organizations
         summary: Organizations update
         description: Using the passed organization object, updates or inserts are made to save the data.
         requestBody:
            description: The organization to be updated or inserted into the data set.
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/Organization'
         responses:
            200:
               description: Success
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/Organization'
            403:
               description: Unauthorized
      delete:
         tags:
         - Organizations
         summary: Organizations delete
         description: Remove an organization for the form given a form ID
         responses:
            204:
               description: Success
            403:
               description: Unauthorized
   /form/{id}/working_groups:
      parameters:
      -  name: id
         in: path
         description: Unique ID of the membership form entry
         required: true
         schema:
            $ref: '#/components/schemas/ObjectID'
      get:
         tags:
         - Working Groups
         summary: Working Groups list
         description: Returns a list of tracked Working Groups for membership form
         responses:
            200:
               description: Success
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/WorkingGroups'
            403:
               description: Unauthorized
            500:
               description: Error while retrieving data
      put:
         tags:
         - Working Groups
         summary: Working Groups update
         description: Using the passed Working Groups object, updates or inserts are made to save the data.
         requestBody:
            description: The working group to be updated or inserted into the data set.
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/WorkingGroup'
         responses:
            200:
               description: Success
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/Organization'
            403:
               description: Unauthorized
   /form/{id}/working_groups/{workingGroupID}:
      parameters:
      -  name: id
         in: path
         description: Unique ID of the membership form entry
         required: true
         schema:
            $ref: '#/components/schemas/ObjectID'
      -  name: workingGroupID
         in: path
         description: Unique ID of the working group relationship within a form
         required: true
         schema:
            $ref: '#/components/schemas/ObjectID'
      get:
         tags:
         - Working Groups
         summary: Working Group
         description: Returns a working group entry that has a matching ID 
         responses:
            200:
               description: Success
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/WorkingGroup'
            403:
               description: Unauthorized
            500:
               description: Error while retrieving data
      delete:
         tags:
         - Working Groups
         summary: Working Groups delete
         description: Remove a working group form entry with the given ID
         responses:
            204:
               description: Success
            403:
               description: Unauthorized

components:
   schemas:
      ObjectID:
         description: Unique identifier for an addressable object in the API.
         type: string
         minimum: 1
      DateTime:
         type: string
         format: datetime
         description: |
            Date string in the RFC 3339 format. Example, `1990-12-31T15:59:60-08:00`.

            More on this standard can be read at https://tools.ietf.org/html/rfc3339.
      Contacts:
         type: array
         items:
            $ref: '#/components/schemas/Contact'
      Contact:
        type: object
        properties:
            id:
               $ref: '#/components/schemas/ObjectID'
            form_id:
               $ref: '#/components/schemas/ObjectID'
            first_name:
               type: string
               description: First name of the contact
            last_name:
               type: string
               description: Last name of the contact
            email:
               type: string
               description: Professional email address at which the individual can be reached at
            job_title:
               type: string
               description: Job title of the contact
            type:
               type: string
               description: The type of contact that is being stored

      Organizations:
         type: array
         items:
            $ref: '#/components/schemas/Organization'
      
      Organization:
         type: object
         properties:
            form_id:
               $ref: '#/components/schemas/ObjectID'
            organization_id:
               $ref: '#/components/schemas/ObjectID'
            legal_name:
               type: string
               description: Legal Name of the Organization
            twitter:
               type: string
               description: The Twitter handle of the organization
            address:
               type: object
               properties:
                  street:
                     type: string
                     description: Street address of the organization
                  city:
                     type: string
                     description: The ciy in which the organization is based
                  province_state:
                     type: string
                     description: The province/state in which the organization is based
                  country:
                     type: string
                     description: The country in which the organization is based
                  postal_code:
                     type: string
                     description: The postal code of the physical address of the organization
      MembershipForms:
         type: array
         items:
            $ref: '#/components/schemas/MembershipForm'
      MembershipForm:
         type: object
         properties:
            id:
               $ref: '#/components/schemas/ObjectID'
            user_id:
               $ref: '#/components/schemas/ObjectID'
            membership_level:
               type: string
               description: The level of membership with the Eclipse Foundation that is being targeted.
            signing_authority:
               type: boolean
               description: Whether the currently submitting user has signing authority for membership contracts.

      WorkingGroups:
         type: array
         items:
            $ref: '#/components/schemas/WorkingGroup'
      WorkingGroup:
         type: object
         properties:
            id:
               $ref: '#/components/schemas/ObjectID'
            working_group:
               type: string
               description: The ID of the working group relationship to be formed
            participation_level:
               type: string
               description: The desired participation level desired within the new working group
            effective_date:
               $ref: '#/components/schemas/DateTime'
            contact:
               $ref: '#/components/schemas/Contact'
         
